
```{r}
library("tidyverse")
library("broom")
library("ggplot2")
```

```{r}
cancer_data <- read_csv("../data/03_expression_tidy.csv")
cancer_data_scaled <- read_csv("../data/03_expression_scaled.csv")
```

```{r}
# Group by 'cancer' and compute summary statistics
summary_stats <- cancer_data |>
  group_by(cancer) |>
  summarise_all(list(mean = mean, sd = sd, median = median))
```

```{r}
cancer_type_distribution <- ggplot(cancer_data, aes(x = factor(cancer_type_number))) +
  geom_bar() +
  labs(title = "Distribution of Cancer Type Numbers", x = "Cancer Type Number", y = "Count") +
  theme_minimal()
cancer_type_distribution
ggsave(filename = "05_cancer_type_dist.png", plot = cancer_type_distribution, device = "png", path = "../results")
```

```{r}
ggplot(cancer_data, aes(x = cancer, y = D49824_s_at)) +
  geom_bar(stat = "identity") +
  labs(title = "Distribution of Gene Expression (D49824_s_at)", x = "Cancer Type", y = "Expression") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  
```

```{r}
# Perform PCA
pca_fit <- cancer_data_scaled |>
  select(!c(1:3)) |>  # Retain only numeric columns
  prcomp(scale = FALSE)  # Perform PCA on scaled data

# Plot the data in PC coordinates
pca_plot <- pca_fit |>
  augment(cancer_data_scaled) |>
  ggplot(aes(.fittedPC1, .fittedPC2, color = cancer)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c("ALL" = "red", "AML" = "blue")
  ) +
  labs(title = "PCA of Gene Expression by Cancer Type", 
       x = "Principal Component 1", y = "Principal Component 2",
       color = "Cancer Type") +
  theme(plot.title = element_text(hjust = 0.5))

# Display the plot
pca_plot
ggsave(filename = "05_pca.png", plot = pca_plot, device = "png", path = "../results")
```