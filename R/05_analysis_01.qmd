```{r}
library("tidyverse")
library("patchwork")
library("broom")
library("purrr")
```

```{r}
cancer_data <- read_csv("../data/03_dat_aug.csv")
cancer_data |> select(3:14) |>
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr") |>
  ggplot(aes(x = gene, y = expr)) + geom_boxplot()
```

<!-- ```{r} -->

<!-- my_first_model <- cancer_data |> -->
<!--   lm(formula = X90857_at ~ cancer_type_number, -->
<!--      data = _) -->

<!-- my_first_model -->

<!-- ``` -->
```{r}
scale_this <- function(x){
  (x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)
}

cancer_data_rescaled <- cancer_data |>
  mutate(across(c(-1,-2,-3), ~ as.numeric(scale(.))))

cancer_data_rescaled |> select(3:14) |>
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr") |>
  ggplot(aes(x = gene, y = expr)) + geom_boxplot()

remove(cancer_data)
```

```{r}
cancer_data_long <- cancer_data_rescaled |>
  select(!cancer) |>
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr")


```

```{r}
cancer_data_long_nested <- cancer_data_long |>
  group_by(gene) |>
  nest() |>
  ungroup()


```

```{r}
cancer_data_long_nested <- cancer_data_long_nested |>
  group_by(gene) |>
  mutate(model_object = map(.x = data,
      .f = ~lm(formula = expr ~ cancer_type_number,
      data = .x)))

```

```{r}
cancer_data_long_nested <- cancer_data_long_nested |>
  mutate(model_object_tidy = map(.x = model_object, 
                                 .f = ~tidy(x = .x,
                                            conf.int = TRUE,
                                            conf.level = 0.95)))

```

```{r}
cancer_data_estimates <- cancer_data_long_nested |>
  unnest(model_object_tidy)

remove(cancer_data_long_nested)
```


```{r}
cancer_data_estimates <- cancer_data_estimates |>
  filter(term == "cancer_type_number") |>
  select(gene, p.value, estimate, conf.low, conf.high) |>
  ungroup()
```

```{r}
cancer_data_estimates <- cancer_data_estimates |>
  mutate(q.value = p.adjust(p = p.value, method = p.adjust.methods)) |>
  mutate(is_significant = case_when(
    q.value > 0.05 ~ "no",
    q.value <= 0.05 ~ "yes")) |>
  mutate(is_significant = factor(is_significant,
                            levels =  c("no", "yes")))
```

```{r}
forest_plot <- cancer_data_estimates |>
  filter(is_significant == "yes") |>
  ggplot(aes(x = estimate,
             y = fct_reorder(gene, estimate),
             xmin = conf.low,
             xmax = conf.high)) +
  geom_errorbarh() +
  geom_point() +
  labs(title = "Gene expression diff between cancers",
       x = "Estimates (95% CIs)",
       y = "Gene") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 6.5), plot.title.position = "plot") +
  geom_vline(xintercept = 0)
forest_plot
```

```{r}
#get list of significants
sig_list <- cancer_data_estimates |>
  filter(is_significant == "yes") |>
  select(gene) |>
  pull() |>
  as.character()


# filter data to only get significant rescales
cancer_data_rescaled_sig <- cancer_data_rescaled |> select(ID, cancer, cancer_type_number, all_of(sig_list))

heatmap <- cancer_data_rescaled_sig |>
  pivot_longer(cols = -c(ID, cancer), names_to = "gene", values_to = "expr") |> 
  ggplot(aes(x=gene, y=ID, fill=expr)) +
  geom_tile() +
  scale_fill_gradient2(low = "#075AFF",
                       mid = "white",
                       high = "#FF0000") +
  theme(axis.text.x = element_text(angle=45, hjust = 1, size = 5),
          axis.text.y = element_text(size = 5),
          legend.position = "bottom")
heatmap 




```

