```{r}
library("tidyverse")
library("patchwork")
library("broom")
library("purrr")

```

```{r}
cancer_data <- read_csv("../data/03_expression_tidy.csv")
cancer_data |> select(3:14) |>
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr") |>
  ggplot(aes(x = gene, y = expr)) + geom_boxplot()
```


```{r}
#read scaled data from csv
cancer_data_rescaled <- read_csv("../data/03_expression_scaled.csv")
cancer_data_rescaled |> select(3:14) |>
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr") |>
  ggplot(aes(x = gene, y = expr)) + geom_boxplot()


```

```{r}
#pivot data to long format
cancer_data_long <- cancer_data_rescaled |>
  select(!c(cancer, patient_id)) |> 
  pivot_longer(cols = -cancer_type_number,
               names_to = "gene",
               values_to = "expr") 

```

```{r}
# group by gene, nest, and perform linear modelling
cancer_data_long_nested <- cancer_data_long |>
  group_by(gene) |>
  nest() |>
  mutate(model_object = map(.x = data,
      .f = ~lm(formula = expr ~ cancer_type_number,
      data = .x)))

```



```{r}
# tidy the model object
cancer_data_long_nested <- cancer_data_long_nested |>
  mutate(model_object_tidy = map(.x = model_object,
                                 .f = ~tidy(x = .x,
                                            conf.int = TRUE,
                                            conf.level = 0.95)))

```

```{r}
# unnest to have linear model results part of the dataframe and free memory by removing nested object
cancer_data_estimates <- cancer_data_long_nested |>
  unnest(model_object_tidy)
remove(cancer_data_long_nested)
```


```{r}
# filter rows and select only necessary columns
cancer_data_estimates <- cancer_data_estimates |>
  filter(term == "cancer_type_number") |>
  select(gene, p.value, estimate, conf.low, conf.high) |>
  ungroup()


```

```{r}
# add column with q_values, used them to add column to 
# identifier whether expression change is significant
cancer_data_estimates <- cancer_data_estimates |>
  mutate(q.value = p.adjust(p = p.value, method = p.adjust.methods)) |>
  mutate(is_significant = case_when(
    q.value > 0.05 ~ "no",
    q.value <= 0.05 ~ "yes")) |>
  mutate(is_significant = factor(is_significant,
                            levels =  c("no", "yes")))
```

```{r}
# make a forest plot showing change in expression between cancer types for genes
# plot only significant expression changes
forest_plot <- cancer_data_estimates |>
  filter(is_significant == "yes") |>
  ggplot(aes(x = estimate,
             y = fct_reorder(gene, estimate),
             xmin = conf.low,
             xmax = conf.high)) +
  geom_errorbarh() +
  geom_point() +
  labs(title = "Gene expression diff between cancers",
       x = "Estimates (95% CIs)",
       y = "Gene") +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 6.5), plot.title.position = "plot") +
  geom_vline(xintercept = 0)
forest_plot
```

```{r}
# Load function from 99_proj_func
# Make heatmap

heatmap <- heatmap_from_data(cancer_data_estimates, cancer_data_rescaled, TRUE)
heatmap2 <- heatmap_from_data(cancer_data_estimates, cancer_data_rescaled, FALSE)
combined_heatmap <- heatmap + heatmap2

ggsave(filename = "05_combined_heatmap.png", plot = combined_heatmap, device = "png", path = "../results")


```