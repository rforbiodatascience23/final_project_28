---
title: "04. Describing expression data"
execute: 
  echo: false
  eval: true
format: html
editor: 
  markdown: 
    wrap: 80
---

## Loading libraries

```{r}
#| eval: false
library(tidyverse)
```
```{r}
#| eval: true
library(dplyr)
library(patchwork)
library(ggridges)
```

## Loading and cleaning data

```{r}
expression_data <- read_csv("../data/01_expression_data.csv")
patient_data    <- read_csv("../data/01_patient_data.csv")

# removing gene "call" columns
expression_data <- expression_data |>
  select(-matches("^call\\.\\.\\.\\d+")
         )

# cleaning column names
expression_data <- expression_data |>
  rename(gene_description = "Gene Description",
         gene_accession_number = "Gene Accession Number"
         ) |> 
  relocate(gene_description,
           .after = last_col()
           )
```

## Basic data set information

```{r}
# Dimensions
expression_data_dims <- expression_data |> 
  dim() |> 
  print() # rows x columns
```

```{r}
# Preview of data sample
expression_data |> 
  sample_n(5)
```

## Transforming data

```{r}
# pivoting to put patient ID, gene, cancer, expression in columns
expression_long <- expression_data |> 
  pivot_longer(cols = -c(gene_description,
                         gene_accession_number),
               names_to  = "patient_id",
               values_to = "expression")
```

```{r}
# merging expression data with patient data based on patient ID
expression_long_with_cancer <- merge(x = expression_long,
                                     y = patient_data,
                                     by.x = "patient_id",
                                     by.y = "patient")
```

## Exploratory data analysis

### Distributions of mean expressions

```{r}
expression_means <- expression_long_with_cancer |> 
  group_by(cancer, gene_description) |> 
  summarise(mean = mean(expression))

# Constructing custom labels for a custom 'facet_labeller' function
custom_labels <- list(
  "ALL" = "Acute lymphoid leukemia (ALL)",
  "AML" = "Acute myeloid leukemia (AML)")

mean_expression_hist <- expression_means |> 
  ggplot(
    aes(x = mean,
        fill = cancer)
  )

mean_expression_hist_general <- mean_expression_hist +
  geom_histogram(binwidth = 500,
                 alpha = 0.7) +
  facet_wrap(~cancer,
             nrow = 2,
             labeller = facet_labeller)

mean_expression_hist_general +
  labs(
    title = "Distributions of mean gene expressions",
    x = "Mean gene expression (a.u.)",
    y = "Count"
  ) +
  theme_minimal() +
  scale_fill_viridis_d(guide = "none") +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "panel",
    strip.text = element_text(size = 11,
                              face = "bold"),
    axis.title.y = element_text(size = 11,
                                face = "bold",
                                angle = 0),
    axis.text.y = element_text(size = 11,
                               colour = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11)
  )
```

### Zooming in on around the MODE

```{r}
mean_expression_hist +
  geom_histogram(binwidth = 250,
                 alpha = 0.7) +
  coord_cartesian(xlim = c(-1000, 3000)) +
  labs(
    title = "Zooming in on means around mode",
    x = "Mean gene expression (a.u.)",
    y = "Count"
  ) +
  theme_minimal() +
  scale_fill_viridis_d(guide = "none") +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "panel",
    strip.text = element_text(size = 11,
                              face = "bold"),
    axis.title.y = element_text(size = 11,
                                face = "bold",
                                angle = 0,
                                vjust = 0.5),
    axis.text.y = element_text(size = 11,
                               colour = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11)
  )
```

### Zooming in on NEGATIVE means

```{r}
mean_expression_hist +
  geom_histogram(binwidth = 250,
                 alpha = 0.7) +
  coord_cartesian(xlim = c(-3000, -1)) +
  labs(
    title = "Zooming in on negative means",
    x = "Mean gene expression (a.u.)",
    y = "Count"
  ) +
  theme_minimal() +
  scale_fill_viridis_d(guide = "none") +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "panel",
    strip.text = element_text(size = 11,
                              face = "bold"),
    axis.title.y = element_text(size = 11,
                                face = "bold",
                                angle = 0,
                                vjust = 0.5),
    axis.text.y = element_text(size = 11,
                               colour = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11)
  )
```

## Zooming in on POSITIVE means

```{r}
mean_expression_hist +
  geom_histogram(binwidth = 2000,
                 alpha = 0.7) +
  coord_cartesian(xlim = c(0, 30000)) +
  labs(
    title = "Zooming in on positive means",
    x = "Mean gene expression (a.u.)",
    y = "Count"
  ) +
  theme_minimal() +
  scale_fill_viridis_d(guide = "none") +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "panel",
    strip.text = element_text(size = 11,
                              face = "bold"),
    axis.title.y = element_text(size = 11,
                                face = "bold",
                                angle = 0,
                                vjust = 0.5),
    axis.text.y = element_text(size = 11,
                               colour = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11)
  )
```

## Finding highest and lowest expressed genes // TODO: put in a function

```{r}
# Find 10 MOST expressed genes
highest_10_genes_ALL <- expression_long_with_cancer |> 
  filter(cancer == "ALL") |> 
  find_most_expressed(n = 10)

highest_10_genes_AML <- expression_long_with_cancer |>
  filter(cancer == "AML") |> 
  find_most_expressed(n = 10)

# Find 10 LEAST expressed genes
lowest_10_genes_ALL <- expression_long_with_cancer |> 
  find_most_expressed(n = 10,
                      reverse = TRUE)

lowest_10_genes_AML <- expression_long_with_cancer |> 
  filter(cancer == "AML") |> 
  find_most_expressed(n = 10,
                      reverse = TRUE)
```

## Plotting distributions of 10 highest expressed genes // TODO: put in a function

```{r}
#| label: highest-ridges
#| fig-width: 7
#| fig-asp: 0.5
#| out-width: "600"

# Combining at this point makes for easier plotting
highest_10_combined <- bind_rows(highest_10_genes_ALL,
                                 highest_10_genes_AML)

highest_10_plot <- highest_10_combined |> 
  ggplot(
    aes(x = expression,
        y = gene_description,
        fill = cancer)
  ) +
  geom_density_ridges(
    alpha = 0.5,
    scale = 1,
    panel_scaling = FALSE
  ) +
  scale_fill_viridis_d(name = "Cancer type") +
  labs(
    title = "Highest mean expression per cancer type.",
    x = "Gene expression (a.u.)",
    y = NULL
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "plot",
    plot.subtitle = element_text(size = 10),
    axis.text.y = element_text(size = 10,
                               color = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11),
    legend.title = element_text(size = 11,
                                face = "bold"),
    legend.text = element_text(size = 11),
    legend.position = "top",
    legend.justification = c(0, 0)
  )

highest_10_plot
```

## Plotting distribution of 10 lowest expressed genes

```{r}
#| label: lowest-plots
#| fig-width: 7
#| fig-asp: 0.5
#| out-width: "600"

# Combining at this point makes for easier plotting
lowest_10_combined <- bind_rows(lowest_10_genes_ALL,
                                lowest_10_genes_AML)

lowest_10_plot <- lowest_10_combined |> 
  ggplot(
    aes(x = expression,
        y = gene_description,
        fill = cancer)
  ) +
  geom_density_ridges(
    alpha = 0.5,
    scale = 1,
    panel_scaling = FALSE
  ) +
  scale_fill_viridis_d(name = "Cancer type") +
  labs(
    title = "Lowest mean expression per cancer type.",
    x = "Gene expression (a.u.)",
    y = NULL
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 12,
                              face = "bold"),
    plot.title.position = "plot",
    plot.subtitle = element_text(size = 10),
    axis.text.y = element_text(size = 10,
                               color = "black"),
    axis.title.x = element_text(size = 11,
                                face = "bold"),
    axis.text.x = element_text(size = 11),
    legend.title = element_text(size = 11,
                                face = "bold"),
    legend.text = element_text(size = 11),
    legend.position = "top",
    legend.justification = c(0, 0)
  )

lowest_10_plot
```